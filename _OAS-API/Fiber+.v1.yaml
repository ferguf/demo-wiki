openapi: 3.0.0
info:
  title: Fiber+ Service Provision API
  version: '1.0'
  description: |
    This API describers the service provision 'intent'  building blocks for the MIST API to provsion a customer and it assocated devices ( SRX and APs) .

    Intent APIs simplify the process of creating workflows that consolidate multiple network actions. Intent APIs also expose standard network-based resource operations such as Add/Get/deletle on objects, that provides flexibility to tailor application experience.

    These RESTful APIs are simple, extensible, and secure.

    **The building blocks for a Fiber +  service are:**
     * Get information from MIST all Lumen Customer from MIST
     * Get detailed information from MIST afor a single customer ( locations , devices , staged or operational etc )
     * Add/delete a New Customer to MIST
     * Add/delete a location for a Customer to MIST
     * Add/delete a New staged device (SRX or Wifi AP) to a Customer location to MIST
     * Add/delete a New SRX device Configuration to a device to MIST
     * Get the operational status of all devices for a specific customer from MIST
     * Get detail history status of all devices for a specific customer from MIST

    Additional Documentation can be found

    [Fiber+ High Level Design ](http://wiki.level3.com/wiki/High_Level_Design)

    ![Mist API Sequence](assets/images/Mist-API-workflow.png)

    New Text more new text; more new text
  contact:
    name: 'Network Architecture '
    email: network-API@lumen.com
servers:
  - url: 'https://api.mist.com/api/v1'
    description: MIST API
tags:
  - name: Service Inventory
      description: The API get informations
    externalDocs:
      url: 'http://docs.network-api.lumen.com/FiberServiceInventory.htm'
  - name: Service Activation
    description: Add Mist Service
    externalDocs:
      url: 'http://docs.network-api.lumen.com/Fiber+ServiceInventory.htm'
  - name: Service Delete
    description: Delete Internet Service
    externalDocs:
      url: 'http://docs.network-api.lumen.com/ServiceInventory.htm'
  - name: Service Status
    description: Service and device Status
    externalDocs:
      url: 'http://docs.network-api.lumen.com/ServiceInventory.htm'
  - name: verify
  - name: Get Inventory
paths:
  /self:
    get:
      summary: Your GET endpoint
      tags:
        - verify
      responses:
        '200':
          $ref: '#/components/responses/self'
      operationId: get-self
      description: 'test the API endpoint '
  '/msps/{msp_id}/orgs':
    get:
      summary: GET MSP Orgs Endpoint
      tags:
        - Get Inventory
      operationId: get-msps-orgs
      description: This request will return the MIST Org-ID (UUID)
      responses:
        '200':
          $ref: '#/components/responses/orgs'
    parameters:
      - schema:
          type: string
          example: d348ad4f-9707-4c14-9b4f-837682da00ce
          default: d348ad4f-9707-4c14-9b4f-837682da00ce
        name: msp_id
        in: path
        required: true
        description: Mist MSP_ID
    post:
      summary: ''
      operationId: post-msps-msp_id-orgs
      responses:
        '200':
          description: OK
      description: here is a post
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
  '/orgs/{org_id}/inventory':
    parameters:
      - $ref: '#/components/parameters/org_id'
    get:
      summary: GET Organization hardware Inventory
      tags:
        - Get Inventory
      responses:
        '200':
          $ref: '#/components/responses/inventory'
      operationId: get-org_id-inventory
      description: 'this returns the hardware inventory '
      parameters:
        - schema:
            type: string
          in: query
          name: model
          description: 'the model type '
        - schema:
            type: string
          in: query
          name: mac
          description: the Ethernet MAC Address of the wifi AP. SRX
        - schema:
            type: string
          in: query
          name: serial
          description: 'serial nunber '
  '/orgs/{org_id}/templates':
    get:
      summary: GET Organization template
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/orgs'
      operationId: get-orgs-orgs_id-templates
      description: This returns the template assocaited with a customer - they are required to deploy a customer devices
    parameters:
      - $ref: '#/components/parameters/org_id'
components:
  securitySchemes:
    API Key - 1:
      name: Authorization
      type: apiKey
      in: header
  schemas: {}
  responses:
    self:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              email:
                type: string
                minLength: 1
              first_name:
                type: string
                minLength: 1
              last_name:
                type: string
                minLength: 1
              tags:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    '':
                      type: string
                      minLength: 1
              privileges:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    scope:
                      type: string
                      minLength: 1
                    org_id:
                      type: string
                      minLength: 1
                    role:
                      type: string
                      minLength: 1
                    name:
                      type: string
                      minLength: 1
                    msp_id:
                      type: string
                      minLength: 1
                    msp_name:
                      type: string
                      minLength: 1
                    orggroup_ids:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      items:
                        type: object
            required:
              - email
              - first_name
              - last_name
    orgs:
      description: Example response
      content:
        application/json:
          schema:
            type: array
            description: ''
            minItems: 1
            uniqueItems: true
            items:
              type: object
              required:
                - name
                - id
                - msp_id
                - created_time
                - modified_time
                - allow_mist
                - session_expiry
                - alarmtemplate_id
              properties:
                name:
                  type: string
                  minLength: 1
                id:
                  type: string
                  minLength: 1
                msp_id:
                  type: string
                  minLength: 1
                created_time:
                  type: number
                modified_time:
                  type: number
                allow_mist:
                  type: boolean
                session_expiry:
                  type: number
                alarmtemplate_id:
                  type: string
                  minLength: 1
    inventory:
      description: Example response
      content:
        application/json:
          schema:
            type: array
            description: ''
            minItems: 1
            uniqueItems: true
            items:
              type: object
              required:
                - mac
                - serial
                - model
                - sku
                - hw_rev
                - type
                - magic
                - org_id
                - site_id
                - created_time
                - modified_time
                - id
                - name
                - connected
              properties:
                mac:
                  type: string
                  minLength: 1
                serial:
                  type: string
                  minLength: 1
                model:
                  type: string
                  minLength: 1
                sku:
                  type: string
                  minLength: 1
                hw_rev:
                  type: string
                  minLength: 1
                type:
                  type: string
                  minLength: 1
                magic:
                  type: string
                  minLength: 1
                org_id:
                  type: string
                  minLength: 1
                site_id:
                  type: string
                  minLength: 1
                created_time:
                  type: number
                modified_time:
                  type: number
                id:
                  type: string
                  minLength: 1
                name:
                  type: string
                  minLength: 1
                deviceprofile_id: {}
                connected:
                  type: boolean
        application/xml:
          schema:
            type: object
            properties: {}
  parameters:
    org_id:
      name: org_id
      in: path
      required: true
      schema:
        type: string
      description: the UUID of the Customer Organization
      example: 02929263-39ee-4648-b36e-d9fddae02270
security:
  - API Key - 1: []
